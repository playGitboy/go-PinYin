package main

import (
	"bufio"
	"fmt"
	"io"
	"os"
	"sort"
	"strings"

	"github.com/xuender/oils/base"
)

func main() {
	file := base.Panic1(os.Open("data/dict.txt"))
	reader := bufio.NewReader(file)
	pySet := base.NewSet[string]()
	pyMap := base.NewMap[rune, string]()

	defer file.Close()

	for {
		line, _, err := reader.ReadLine()
		if err == io.EOF {
			break
		}

		str := string(line)
		runes := []rune(str)
		py := string(runes[1:])
		pyMap[runes[0]] = py
		pySet.Add(strings.Split(py, ",")...)
	}

	pySlice := base.NewSlice(pySet.Slice()...)
	sort.Sort(pySlice)
	createTones(pySlice)
	createData(pyMap, pySlice)
}

func createData(pyMap base.Map[rune, string], pySlice base.Slice[string]) {

	tones := base.NewMap[rune, []int]()

	for key, value := range pyMap {
		values := strings.Split(value, ",")
		tones[key] = make([]int, len(values))

		for sub, pyStr := range values {
			tones[key][sub] = pySlice.Index(pyStr)
		}
	}

	file := base.Panic1(os.Create("dict_gen.go"))
	defer file.Close()
	_, _ = file.WriteString("// Code generated by dict2data. DO NOT EDIT.\n")
	_, _ = file.WriteString("package gopy\n\n")
	_, _ = file.WriteString("// nolint\n")
	_, _ = file.WriteString("var dict = map[rune]string{\n")

	for han, tones := range tones {
		s := base.NewSlice(tones...)
		_, _ = file.WriteString(fmt.Sprintf("\t0x%x:\"%s\",\n", han, s.Join(",")))
	}

	_, _ = file.WriteString("}\n")
}

func createTones(pySlice base.Slice[string]) {
	tonesGo := base.Panic1(os.Create("tones_gen.go"))
	defer tonesGo.Close()

	_, _ = tonesGo.WriteString("// Code generated by dict2data. DO NOT EDIT.\n")
	_, _ = tonesGo.WriteString("package gopy\n\n")
	_, _ = tonesGo.WriteString("var tones = []string{")

	for index, pinyin := range pySlice {
		if index%10 == 0 {
			_, _ = tonesGo.WriteString("\n\t")
		}

		_, _ = tonesGo.WriteString("\"")
		_, _ = tonesGo.WriteString(pinyin)
		_, _ = tonesGo.WriteString("\", ")
	}

	_, _ = tonesGo.WriteString("\n}")
}
